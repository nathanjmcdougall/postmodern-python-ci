[build-system]
build-backend = "uv_build"

requires = [ "uv-build>=0.8.0,<0.9.0" ]

[project]
name = "postmodern-ci"
version = "0.1.0"
description = "Example of a GitHub Actions-based CI and release pipelines with Python code via `uv`."
readme = "README.md"
authors = [
  { name = "Nathan McDougall", email = "nathan.j.mcdougall@gmail.com" },
]
requires-python = ">=3.12"
classifiers = [
  "Development Status :: 1 - Planning",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dependencies = [  ]

[dependency-groups]
dev = [
  "deptry>=0.23.0",
  "pre-commit>=4.2.0",
  "ruff>=0.7.1",
]
test = [
  "coverage[toml]>=7.9.2",
  "pytest>=8.4.1",
  "pytest-cov>=6.2.1",
  "pytest-md>=0.2.0",
]

[tool.ruff]
line-length = 88
src = [ "src" ]
format.docstring-code-format = true

lint.select = [
  "C4",
  "E4",
  "E7",
  "E9",
  "F",
  "FURB",
  "I",
  "PLE",
  "PLR",
  "PT",
  "RUF",
  "SIM",
  "UP",
]

[tool.codespell]
ignore-regex = [ "[A-Za-z0-9+/]{100,}" ]
ignore-words-list = [ "..." ]

[tool.pyproject-fmt]
keep_full_version = true

[tool.pytest.ini_options]
testpaths = [ "tests" ]
addopts = [ "--import-mode=importlib" ]

report.exclude_also = [
  "if TYPE_CHECKING:",
  "raise AssertionError",
  "raise NotImplementedError",
  "assert_never(.*)",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
report.omit = [ "*/pytest-of-*/*" ]

[tool.coverage.run]
source = [ "src" ]
omit = [ "*/pytest-of-*/*" ]

[tool.uv]
link-mode = "symlink"
default-groups = [ "test", "dev" ]
